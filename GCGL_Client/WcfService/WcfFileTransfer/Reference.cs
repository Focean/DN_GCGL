//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace GCGL_Client.WcfFileTransfer {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfFileTransfer.IFileTransfer")]
    public interface IFileTransfer {
        
        // CODEGEN: 参数“HelloResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileTransfer/Hello", ReplyAction="http://tempuri.org/IFileTransfer/HelloResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GCGL_Client.WcfFileTransfer.HelloResponse Hello(GCGL_Client.WcfFileTransfer.HelloRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFileTransfer/Hello", ReplyAction="http://tempuri.org/IFileTransfer/HelloResponse")]
        System.IAsyncResult BeginHello(GCGL_Client.WcfFileTransfer.HelloRequest request, System.AsyncCallback callback, object asyncState);
        
        GCGL_Client.WcfFileTransfer.HelloResponse EndHello(System.IAsyncResult result);
        
        // CODEGEN: 参数“FilePath”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileTransfer/DeleteFile", ReplyAction="http://tempuri.org/IFileTransfer/DeleteFileResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GCGL_Client.WcfFileTransfer.DeleteFileResponse DeleteFile(GCGL_Client.WcfFileTransfer.DeleteFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFileTransfer/DeleteFile", ReplyAction="http://tempuri.org/IFileTransfer/DeleteFileResponse")]
        System.IAsyncResult BeginDeleteFile(GCGL_Client.WcfFileTransfer.DeleteFileRequest request, System.AsyncCallback callback, object asyncState);
        
        GCGL_Client.WcfFileTransfer.DeleteFileResponse EndDeleteFile(System.IAsyncResult result);
        
        // CODEGEN: 消息 UploadFileMessage 的包装名称(UploadFileMessage)以后生成的消息协定与默认值(UploadFile)不匹配
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileTransfer/UploadFile", ReplyAction="http://tempuri.org/IFileTransfer/UploadFileResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GCGL_Client.WcfFileTransfer.UploadFileReturnMessage UploadFile(GCGL_Client.WcfFileTransfer.UploadFileMessage request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFileTransfer/UploadFile", ReplyAction="http://tempuri.org/IFileTransfer/UploadFileResponse")]
        System.IAsyncResult BeginUploadFile(GCGL_Client.WcfFileTransfer.UploadFileMessage request, System.AsyncCallback callback, object asyncState);
        
        GCGL_Client.WcfFileTransfer.UploadFileReturnMessage EndUploadFile(System.IAsyncResult result);
        
        // CODEGEN: 消息 DownloadFileMessage 的包装名称(DownloadFileMessage)以后生成的消息协定与默认值(DownloadFile)不匹配
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileTransfer/DownloadFile", ReplyAction="http://tempuri.org/IFileTransfer/DownloadFileResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GCGL_Client.WcfFileTransfer.DownloadFileReturnMessage DownloadFile(GCGL_Client.WcfFileTransfer.DownloadFileMessage request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFileTransfer/DownloadFile", ReplyAction="http://tempuri.org/IFileTransfer/DownloadFileResponse")]
        System.IAsyncResult BeginDownloadFile(GCGL_Client.WcfFileTransfer.DownloadFileMessage request, System.AsyncCallback callback, object asyncState);
        
        GCGL_Client.WcfFileTransfer.DownloadFileReturnMessage EndDownloadFile(System.IAsyncResult result);
        
        // CODEGEN: 参数“GetFileListResult”需要其他方案信息，使用参数模式无法捕获这些信息。特定特性为“System.Xml.Serialization.XmlElementAttribute”。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileTransfer/GetFileList", ReplyAction="http://tempuri.org/IFileTransfer/GetFileListResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GCGL_Client.WcfFileTransfer.GetFileListResponse GetFileList(GCGL_Client.WcfFileTransfer.GetFileListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFileTransfer/GetFileList", ReplyAction="http://tempuri.org/IFileTransfer/GetFileListResponse")]
        System.IAsyncResult BeginGetFileList(GCGL_Client.WcfFileTransfer.GetFileListRequest request, System.AsyncCallback callback, object asyncState);
        
        GCGL_Client.WcfFileTransfer.GetFileListResponse EndGetFileList(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Hello", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class HelloRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string yourName;
        
        public HelloRequest() {
        }
        
        public HelloRequest(string yourName) {
            this.yourName = yourName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="HelloResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class HelloResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string HelloResult;
        
        public HelloResponse() {
        }
        
        public HelloResponse(string HelloResult) {
            this.HelloResult = HelloResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteFile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FilePath;
        
        public DeleteFileRequest() {
        }
        
        public DeleteFileRequest(string FilePath) {
            this.FilePath = FilePath;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteFileResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DeleteFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool DeleteFileResult;
        
        public DeleteFileResponse() {
        }
        
        public DeleteFileResponse(bool DeleteFileResult) {
            this.DeleteFileResult = DeleteFileResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public int Index;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SavePath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileData;
        
        public UploadFileMessage() {
        }
        
        public UploadFileMessage(string FileName, int Index, string SavePath, System.IO.Stream FileData) {
            this.FileName = FileName;
            this.Index = Index;
            this.SavePath = SavePath;
            this.FileData = FileData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileReturnMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileReturnMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FilePath;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public int Index;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Path;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Stream_ID;
        
        public UploadFileReturnMessage() {
        }
        
        public UploadFileReturnMessage(string FilePath, int Index, string Path, string Stream_ID) {
            this.FilePath = FilePath;
            this.Index = Index;
            this.Path = Path;
            this.Stream_ID = Stream_ID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadFileMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadFileMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FilePath;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public int Index;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Path;
        
        public DownloadFileMessage() {
        }
        
        public DownloadFileMessage(string FileName, string FilePath, int Index, string Path) {
            this.FileName = FileName;
            this.FilePath = FilePath;
            this.Index = Index;
            this.Path = Path;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadFileReturnMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadFileReturnMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long FileSize;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public int Index;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Tag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileData;
        
        public DownloadFileReturnMessage() {
        }
        
        public DownloadFileReturnMessage(long FileSize, int Index, string Tag, System.IO.Stream FileData) {
            this.FileSize = FileSize;
            this.Index = Index;
            this.Tag = Tag;
            this.FileData = FileData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFileList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetFileListRequest {
        
        public GetFileListRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFileListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetFileListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataSet GetFileListResult;
        
        public GetFileListResponse() {
        }
        
        public GetFileListResponse(System.Data.DataSet GetFileListResult) {
            this.GetFileListResult = GetFileListResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileTransferChannel : GCGL_Client.WcfFileTransfer.IFileTransfer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HelloCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HelloCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Index {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public string Path {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public string Stream_ID {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DownloadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Index {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        public string Tag {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public System.IO.Stream FileData {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.IO.Stream)(this.results[2]));
            }
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[3]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFileListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFileListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileTransferClient : System.ServiceModel.ClientBase<GCGL_Client.WcfFileTransfer.IFileTransfer>, GCGL_Client.WcfFileTransfer.IFileTransfer {
        
        private BeginOperationDelegate onBeginHelloDelegate;
        
        private EndOperationDelegate onEndHelloDelegate;
        
        private System.Threading.SendOrPostCallback onHelloCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteFileDelegate;
        
        private EndOperationDelegate onEndDeleteFileDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadFileDelegate;
        
        private EndOperationDelegate onEndUploadFileDelegate;
        
        private System.Threading.SendOrPostCallback onUploadFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginDownloadFileDelegate;
        
        private EndOperationDelegate onEndDownloadFileDelegate;
        
        private System.Threading.SendOrPostCallback onDownloadFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFileListDelegate;
        
        private EndOperationDelegate onEndGetFileListDelegate;
        
        private System.Threading.SendOrPostCallback onGetFileListCompletedDelegate;
        
        public FileTransferClient() {
        }
        
        public FileTransferClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileTransferClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileTransferClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileTransferClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<HelloCompletedEventArgs> HelloCompleted;
        
        public event System.EventHandler<DeleteFileCompletedEventArgs> DeleteFileCompleted;
        
        public event System.EventHandler<UploadFileCompletedEventArgs> UploadFileCompleted;
        
        public event System.EventHandler<DownloadFileCompletedEventArgs> DownloadFileCompleted;
        
        public event System.EventHandler<GetFileListCompletedEventArgs> GetFileListCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GCGL_Client.WcfFileTransfer.HelloResponse GCGL_Client.WcfFileTransfer.IFileTransfer.Hello(GCGL_Client.WcfFileTransfer.HelloRequest request) {
            return base.Channel.Hello(request);
        }
        
        public string Hello(string yourName) {
            GCGL_Client.WcfFileTransfer.HelloRequest inValue = new GCGL_Client.WcfFileTransfer.HelloRequest();
            inValue.yourName = yourName;
            GCGL_Client.WcfFileTransfer.HelloResponse retVal = ((GCGL_Client.WcfFileTransfer.IFileTransfer)(this)).Hello(inValue);
            return retVal.HelloResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GCGL_Client.WcfFileTransfer.IFileTransfer.BeginHello(GCGL_Client.WcfFileTransfer.HelloRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHello(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHello(string yourName, System.AsyncCallback callback, object asyncState) {
            GCGL_Client.WcfFileTransfer.HelloRequest inValue = new GCGL_Client.WcfFileTransfer.HelloRequest();
            inValue.yourName = yourName;
            return ((GCGL_Client.WcfFileTransfer.IFileTransfer)(this)).BeginHello(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GCGL_Client.WcfFileTransfer.HelloResponse GCGL_Client.WcfFileTransfer.IFileTransfer.EndHello(System.IAsyncResult result) {
            return base.Channel.EndHello(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndHello(System.IAsyncResult result) {
            GCGL_Client.WcfFileTransfer.HelloResponse retVal = ((GCGL_Client.WcfFileTransfer.IFileTransfer)(this)).EndHello(result);
            return retVal.HelloResult;
        }
        
        private System.IAsyncResult OnBeginHello(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string yourName = ((string)(inValues[0]));
            return this.BeginHello(yourName, callback, asyncState);
        }
        
        private object[] OnEndHello(System.IAsyncResult result) {
            string retVal = this.EndHello(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHelloCompleted(object state) {
            if ((this.HelloCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HelloCompleted(this, new HelloCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HelloAsync(string yourName) {
            this.HelloAsync(yourName, null);
        }
        
        public void HelloAsync(string yourName, object userState) {
            if ((this.onBeginHelloDelegate == null)) {
                this.onBeginHelloDelegate = new BeginOperationDelegate(this.OnBeginHello);
            }
            if ((this.onEndHelloDelegate == null)) {
                this.onEndHelloDelegate = new EndOperationDelegate(this.OnEndHello);
            }
            if ((this.onHelloCompletedDelegate == null)) {
                this.onHelloCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHelloCompleted);
            }
            base.InvokeAsync(this.onBeginHelloDelegate, new object[] {
                        yourName}, this.onEndHelloDelegate, this.onHelloCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GCGL_Client.WcfFileTransfer.DeleteFileResponse GCGL_Client.WcfFileTransfer.IFileTransfer.DeleteFile(GCGL_Client.WcfFileTransfer.DeleteFileRequest request) {
            return base.Channel.DeleteFile(request);
        }
        
        public bool DeleteFile(string FilePath) {
            GCGL_Client.WcfFileTransfer.DeleteFileRequest inValue = new GCGL_Client.WcfFileTransfer.DeleteFileRequest();
            inValue.FilePath = FilePath;
            GCGL_Client.WcfFileTransfer.DeleteFileResponse retVal = ((GCGL_Client.WcfFileTransfer.IFileTransfer)(this)).DeleteFile(inValue);
            return retVal.DeleteFileResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GCGL_Client.WcfFileTransfer.IFileTransfer.BeginDeleteFile(GCGL_Client.WcfFileTransfer.DeleteFileRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteFile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteFile(string FilePath, System.AsyncCallback callback, object asyncState) {
            GCGL_Client.WcfFileTransfer.DeleteFileRequest inValue = new GCGL_Client.WcfFileTransfer.DeleteFileRequest();
            inValue.FilePath = FilePath;
            return ((GCGL_Client.WcfFileTransfer.IFileTransfer)(this)).BeginDeleteFile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GCGL_Client.WcfFileTransfer.DeleteFileResponse GCGL_Client.WcfFileTransfer.IFileTransfer.EndDeleteFile(System.IAsyncResult result) {
            return base.Channel.EndDeleteFile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDeleteFile(System.IAsyncResult result) {
            GCGL_Client.WcfFileTransfer.DeleteFileResponse retVal = ((GCGL_Client.WcfFileTransfer.IFileTransfer)(this)).EndDeleteFile(result);
            return retVal.DeleteFileResult;
        }
        
        private System.IAsyncResult OnBeginDeleteFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string FilePath = ((string)(inValues[0]));
            return this.BeginDeleteFile(FilePath, callback, asyncState);
        }
        
        private object[] OnEndDeleteFile(System.IAsyncResult result) {
            bool retVal = this.EndDeleteFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteFileCompleted(object state) {
            if ((this.DeleteFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteFileCompleted(this, new DeleteFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteFileAsync(string FilePath) {
            this.DeleteFileAsync(FilePath, null);
        }
        
        public void DeleteFileAsync(string FilePath, object userState) {
            if ((this.onBeginDeleteFileDelegate == null)) {
                this.onBeginDeleteFileDelegate = new BeginOperationDelegate(this.OnBeginDeleteFile);
            }
            if ((this.onEndDeleteFileDelegate == null)) {
                this.onEndDeleteFileDelegate = new EndOperationDelegate(this.OnEndDeleteFile);
            }
            if ((this.onDeleteFileCompletedDelegate == null)) {
                this.onDeleteFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteFileCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteFileDelegate, new object[] {
                        FilePath}, this.onEndDeleteFileDelegate, this.onDeleteFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GCGL_Client.WcfFileTransfer.UploadFileReturnMessage GCGL_Client.WcfFileTransfer.IFileTransfer.UploadFile(GCGL_Client.WcfFileTransfer.UploadFileMessage request) {
            return base.Channel.UploadFile(request);
        }
        
        public string UploadFile(string FileName, ref int Index, string SavePath, System.IO.Stream FileData, out string Path, out string Stream_ID) {
            GCGL_Client.WcfFileTransfer.UploadFileMessage inValue = new GCGL_Client.WcfFileTransfer.UploadFileMessage();
            inValue.FileName = FileName;
            inValue.Index = Index;
            inValue.SavePath = SavePath;
            inValue.FileData = FileData;
            GCGL_Client.WcfFileTransfer.UploadFileReturnMessage retVal = ((GCGL_Client.WcfFileTransfer.IFileTransfer)(this)).UploadFile(inValue);
            Index = retVal.Index;
            Path = retVal.Path;
            Stream_ID = retVal.Stream_ID;
            return retVal.FilePath;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GCGL_Client.WcfFileTransfer.IFileTransfer.BeginUploadFile(GCGL_Client.WcfFileTransfer.UploadFileMessage request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadFile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUploadFile(string FileName, int Index, string SavePath, System.IO.Stream FileData, System.AsyncCallback callback, object asyncState) {
            GCGL_Client.WcfFileTransfer.UploadFileMessage inValue = new GCGL_Client.WcfFileTransfer.UploadFileMessage();
            inValue.FileName = FileName;
            inValue.Index = Index;
            inValue.SavePath = SavePath;
            inValue.FileData = FileData;
            return ((GCGL_Client.WcfFileTransfer.IFileTransfer)(this)).BeginUploadFile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GCGL_Client.WcfFileTransfer.UploadFileReturnMessage GCGL_Client.WcfFileTransfer.IFileTransfer.EndUploadFile(System.IAsyncResult result) {
            return base.Channel.EndUploadFile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndUploadFile(System.IAsyncResult result, out int Index, out string Path, out string Stream_ID) {
            GCGL_Client.WcfFileTransfer.UploadFileReturnMessage retVal = ((GCGL_Client.WcfFileTransfer.IFileTransfer)(this)).EndUploadFile(result);
            Index = retVal.Index;
            Path = retVal.Path;
            Stream_ID = retVal.Stream_ID;
            return retVal.FilePath;
        }
        
        private System.IAsyncResult OnBeginUploadFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string FileName = ((string)(inValues[0]));
            int Index = ((int)(inValues[1]));
            string SavePath = ((string)(inValues[2]));
            System.IO.Stream FileData = ((System.IO.Stream)(inValues[3]));
            return this.BeginUploadFile(FileName, Index, SavePath, FileData, callback, asyncState);
        }
        
        private object[] OnEndUploadFile(System.IAsyncResult result) {
            int Index = this.GetDefaultValueForInitialization<int>();
            string Path = this.GetDefaultValueForInitialization<string>();
            string Stream_ID = this.GetDefaultValueForInitialization<string>();
            string retVal = this.EndUploadFile(result, out Index, out Path, out Stream_ID);
            return new object[] {
                    Index,
                    Path,
                    Stream_ID,
                    retVal};
        }
        
        private void OnUploadFileCompleted(object state) {
            if ((this.UploadFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadFileCompleted(this, new UploadFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadFileAsync(string FileName, int Index, string SavePath, System.IO.Stream FileData) {
            this.UploadFileAsync(FileName, Index, SavePath, FileData, null);
        }
        
        public void UploadFileAsync(string FileName, int Index, string SavePath, System.IO.Stream FileData, object userState) {
            if ((this.onBeginUploadFileDelegate == null)) {
                this.onBeginUploadFileDelegate = new BeginOperationDelegate(this.OnBeginUploadFile);
            }
            if ((this.onEndUploadFileDelegate == null)) {
                this.onEndUploadFileDelegate = new EndOperationDelegate(this.OnEndUploadFile);
            }
            if ((this.onUploadFileCompletedDelegate == null)) {
                this.onUploadFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadFileCompleted);
            }
            base.InvokeAsync(this.onBeginUploadFileDelegate, new object[] {
                        FileName,
                        Index,
                        SavePath,
                        FileData}, this.onEndUploadFileDelegate, this.onUploadFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GCGL_Client.WcfFileTransfer.DownloadFileReturnMessage GCGL_Client.WcfFileTransfer.IFileTransfer.DownloadFile(GCGL_Client.WcfFileTransfer.DownloadFileMessage request) {
            return base.Channel.DownloadFile(request);
        }
        
        public long DownloadFile(string FileName, string FilePath, ref int Index, string Path, out string Tag, out System.IO.Stream FileData) {
            GCGL_Client.WcfFileTransfer.DownloadFileMessage inValue = new GCGL_Client.WcfFileTransfer.DownloadFileMessage();
            inValue.FileName = FileName;
            inValue.FilePath = FilePath;
            inValue.Index = Index;
            inValue.Path = Path;
            GCGL_Client.WcfFileTransfer.DownloadFileReturnMessage retVal = ((GCGL_Client.WcfFileTransfer.IFileTransfer)(this)).DownloadFile(inValue);
            Index = retVal.Index;
            Tag = retVal.Tag;
            FileData = retVal.FileData;
            return retVal.FileSize;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GCGL_Client.WcfFileTransfer.IFileTransfer.BeginDownloadFile(GCGL_Client.WcfFileTransfer.DownloadFileMessage request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDownloadFile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDownloadFile(string FileName, string FilePath, int Index, string Path, System.AsyncCallback callback, object asyncState) {
            GCGL_Client.WcfFileTransfer.DownloadFileMessage inValue = new GCGL_Client.WcfFileTransfer.DownloadFileMessage();
            inValue.FileName = FileName;
            inValue.FilePath = FilePath;
            inValue.Index = Index;
            inValue.Path = Path;
            return ((GCGL_Client.WcfFileTransfer.IFileTransfer)(this)).BeginDownloadFile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GCGL_Client.WcfFileTransfer.DownloadFileReturnMessage GCGL_Client.WcfFileTransfer.IFileTransfer.EndDownloadFile(System.IAsyncResult result) {
            return base.Channel.EndDownloadFile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public long EndDownloadFile(System.IAsyncResult result, out int Index, out string Tag, out System.IO.Stream FileData) {
            GCGL_Client.WcfFileTransfer.DownloadFileReturnMessage retVal = ((GCGL_Client.WcfFileTransfer.IFileTransfer)(this)).EndDownloadFile(result);
            Index = retVal.Index;
            Tag = retVal.Tag;
            FileData = retVal.FileData;
            return retVal.FileSize;
        }
        
        private System.IAsyncResult OnBeginDownloadFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string FileName = ((string)(inValues[0]));
            string FilePath = ((string)(inValues[1]));
            int Index = ((int)(inValues[2]));
            string Path = ((string)(inValues[3]));
            return this.BeginDownloadFile(FileName, FilePath, Index, Path, callback, asyncState);
        }
        
        private object[] OnEndDownloadFile(System.IAsyncResult result) {
            int Index = this.GetDefaultValueForInitialization<int>();
            string Tag = this.GetDefaultValueForInitialization<string>();
            System.IO.Stream FileData = this.GetDefaultValueForInitialization<System.IO.Stream>();
            long retVal = this.EndDownloadFile(result, out Index, out Tag, out FileData);
            return new object[] {
                    Index,
                    Tag,
                    FileData,
                    retVal};
        }
        
        private void OnDownloadFileCompleted(object state) {
            if ((this.DownloadFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DownloadFileCompleted(this, new DownloadFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DownloadFileAsync(string FileName, string FilePath, int Index, string Path) {
            this.DownloadFileAsync(FileName, FilePath, Index, Path, null);
        }
        
        public void DownloadFileAsync(string FileName, string FilePath, int Index, string Path, object userState) {
            if ((this.onBeginDownloadFileDelegate == null)) {
                this.onBeginDownloadFileDelegate = new BeginOperationDelegate(this.OnBeginDownloadFile);
            }
            if ((this.onEndDownloadFileDelegate == null)) {
                this.onEndDownloadFileDelegate = new EndOperationDelegate(this.OnEndDownloadFile);
            }
            if ((this.onDownloadFileCompletedDelegate == null)) {
                this.onDownloadFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadFileCompleted);
            }
            base.InvokeAsync(this.onBeginDownloadFileDelegate, new object[] {
                        FileName,
                        FilePath,
                        Index,
                        Path}, this.onEndDownloadFileDelegate, this.onDownloadFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GCGL_Client.WcfFileTransfer.GetFileListResponse GCGL_Client.WcfFileTransfer.IFileTransfer.GetFileList(GCGL_Client.WcfFileTransfer.GetFileListRequest request) {
            return base.Channel.GetFileList(request);
        }
        
        public System.Data.DataSet GetFileList() {
            GCGL_Client.WcfFileTransfer.GetFileListRequest inValue = new GCGL_Client.WcfFileTransfer.GetFileListRequest();
            GCGL_Client.WcfFileTransfer.GetFileListResponse retVal = ((GCGL_Client.WcfFileTransfer.IFileTransfer)(this)).GetFileList(inValue);
            return retVal.GetFileListResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult GCGL_Client.WcfFileTransfer.IFileTransfer.BeginGetFileList(GCGL_Client.WcfFileTransfer.GetFileListRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFileList(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFileList(System.AsyncCallback callback, object asyncState) {
            GCGL_Client.WcfFileTransfer.GetFileListRequest inValue = new GCGL_Client.WcfFileTransfer.GetFileListRequest();
            return ((GCGL_Client.WcfFileTransfer.IFileTransfer)(this)).BeginGetFileList(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GCGL_Client.WcfFileTransfer.GetFileListResponse GCGL_Client.WcfFileTransfer.IFileTransfer.EndGetFileList(System.IAsyncResult result) {
            return base.Channel.EndGetFileList(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetFileList(System.IAsyncResult result) {
            GCGL_Client.WcfFileTransfer.GetFileListResponse retVal = ((GCGL_Client.WcfFileTransfer.IFileTransfer)(this)).EndGetFileList(result);
            return retVal.GetFileListResult;
        }
        
        private System.IAsyncResult OnBeginGetFileList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetFileList(callback, asyncState);
        }
        
        private object[] OnEndGetFileList(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetFileList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFileListCompleted(object state) {
            if ((this.GetFileListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFileListCompleted(this, new GetFileListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFileListAsync() {
            this.GetFileListAsync(null);
        }
        
        public void GetFileListAsync(object userState) {
            if ((this.onBeginGetFileListDelegate == null)) {
                this.onBeginGetFileListDelegate = new BeginOperationDelegate(this.OnBeginGetFileList);
            }
            if ((this.onEndGetFileListDelegate == null)) {
                this.onEndGetFileListDelegate = new EndOperationDelegate(this.OnEndGetFileList);
            }
            if ((this.onGetFileListCompletedDelegate == null)) {
                this.onGetFileListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFileListCompleted);
            }
            base.InvokeAsync(this.onBeginGetFileListDelegate, null, this.onEndGetFileListDelegate, this.onGetFileListCompletedDelegate, userState);
        }
    }
}
